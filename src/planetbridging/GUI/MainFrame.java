/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package planetbridging.GUI;

import FileAccessing.HelperClass;
import Objects.Computer;
import Objects.Drive;
import Objects.Location;
import Objects.Transfer;
import java.awt.event.ActionListener;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.border.*;
import javax.swing.event.*;
import javax.swing.table.*;
import java.awt.event.*;
import javax.swing.*;
import java.util.*;
import java.awt.*;
import planetbridging.Planetbridging;

/**
 *
 * @author the-s
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    
    private HelperClass Help;
    private int SelectedComputer = -2;
    private String CurrentLocation = "";
    private String SelectedComputerSerial = "";
    private DefaultListModel LocationLst;
    private Planetbridging Engine;
    private Computer SelectedComputerObj;
    
    //copy building blocks
    private String CopyLocation = "";
    private ArrayList<Location> Copylst;
    private int CopyComputer = -2;
    
    public MainFrame(Planetbridging pb) {
        Engine = pb;
        LocationLst = new DefaultListModel();
        initComponents();
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        Help = new HelperClass();
        SetupNetworkList();
        SetupLocationList();
    }
    
    private void SetupLocationList(){
        LstLocation.setVisibleRowCount(-1);
        LstLocation.setLayoutOrientation(JList.HORIZONTAL_WRAP);
        LstLocation.setCellRenderer(new CurrentLocRenderer(false,false));
        LstLocation.setModel(LocationLst);
    }
    
    private void SetupNetworkList(){
        LstNetwork.setCellRenderer(new NetworkListRenderer());
    }
    
    public void SetLocalComputer(Computer pc){
        String returnhtml = Engine.ReturnHtmlSetup(pc);
        BtnLocal.setText(returnhtml);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        TxtOutput = new javax.swing.JLabel();
        TxtLocation = new javax.swing.JTextField();
        BtnLocal = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        LstNetwork = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        BtnBack = new javax.swing.JButton();
        SelectItems = new javax.swing.JCheckBox();
        BtnCopy = new javax.swing.JButton();
        BtnPaste = new javax.swing.JButton();
        BtnSearch = new javax.swing.JButton();
        BtnAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        LstLocation = new javax.swing.JList<>();

        setMinimumSize(new java.awt.Dimension(760, 590));
        setName("Planet Bridging"); // NOI18N

        jPanel1.setBackground(new java.awt.Color(37, 170, 226));

        TxtLocation.setEditable(false);
        TxtLocation.setBackground(new java.awt.Color(37, 170, 226));
        TxtLocation.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        TxtLocation.setForeground(new java.awt.Color(255, 255, 255));
        TxtLocation.setBorder(null);
        TxtLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtLocationActionPerformed(evt);
            }
        });

        BtnLocal.setBackground(new java.awt.Color(37, 170, 226));
        BtnLocal.setForeground(new java.awt.Color(255, 255, 255));
        BtnLocal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/ic_monitor-small.png"))); // NOI18N
        BtnLocal.setText("<html>My Computer<br>Drives: 2<br>250gb</html>");
        BtnLocal.setBorder(null);
        BtnLocal.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        BtnLocal.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        BtnLocal.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        BtnLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLocalActionPerformed(evt);
            }
        });

        LstNetwork.setBackground(new java.awt.Color(37, 170, 226));
        LstNetwork.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        LstNetwork.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LstNetworkMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(LstNetwork);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Network");

        jToolBar1.setBackground(new java.awt.Color(37, 170, 226));
        jToolBar1.setFloatable(false);
        jToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar1.setRollover(true);

        BtnBack.setBackground(new java.awt.Color(37, 170, 226));
        BtnBack.setForeground(new java.awt.Color(255, 255, 255));
        BtnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/back.png"))); // NOI18N
        BtnBack.setText("Back");
        BtnBack.setBorder(null);
        BtnBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnBack.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });
        jToolBar1.add(BtnBack);

        SelectItems.setBackground(new java.awt.Color(37, 170, 226));
        SelectItems.setForeground(new java.awt.Color(255, 255, 255));
        SelectItems.setText("Select");
        SelectItems.setFocusable(false);
        SelectItems.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SelectItems.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/offlist.png"))); // NOI18N
        SelectItems.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/list.png"))); // NOI18N
        SelectItems.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SelectItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectItemsActionPerformed(evt);
            }
        });
        jToolBar1.add(SelectItems);

        BtnCopy.setBackground(new java.awt.Color(37, 170, 226));
        BtnCopy.setForeground(new java.awt.Color(255, 255, 255));
        BtnCopy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/copy.png"))); // NOI18N
        BtnCopy.setText("Copy");
        BtnCopy.setBorder(null);
        BtnCopy.setFocusable(false);
        BtnCopy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnCopy.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCopyActionPerformed(evt);
            }
        });
        jToolBar1.add(BtnCopy);

        BtnPaste.setBackground(new java.awt.Color(37, 170, 226));
        BtnPaste.setForeground(new java.awt.Color(255, 255, 255));
        BtnPaste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/save.png"))); // NOI18N
        BtnPaste.setText("Paste");
        BtnPaste.setBorder(null);
        BtnPaste.setFocusable(false);
        BtnPaste.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnPaste.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPasteActionPerformed(evt);
            }
        });
        jToolBar1.add(BtnPaste);

        BtnSearch.setBackground(new java.awt.Color(37, 170, 226));
        BtnSearch.setForeground(new java.awt.Color(255, 255, 255));
        BtnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/search.png"))); // NOI18N
        BtnSearch.setText("Search");
        BtnSearch.setBorder(null);
        BtnSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnSearch.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(BtnSearch);

        BtnAdd.setBackground(new java.awt.Color(37, 170, 226));
        BtnAdd.setForeground(new java.awt.Color(255, 255, 255));
        BtnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/add-1.png"))); // NOI18N
        BtnAdd.setText("Add");
        BtnAdd.setBorder(null);
        BtnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(BtnAdd);

        LstLocation.setBackground(new java.awt.Color(37, 170, 226));
        LstLocation.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        LstLocation.setFixedCellHeight(100);
        LstLocation.setFixedCellWidth(100);
        LstLocation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LstLocationMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(LstLocation);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtLocation))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(TxtOutput)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TxtLocation)
                    .addComponent(BtnLocal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(TxtOutput)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TxtLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtLocationActionPerformed
      System.out.println("YAYY");
    }//GEN-LAST:event_TxtLocationActionPerformed

    private void BtnLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLocalActionPerformed
        SetupLocation(-1,"drives");
    }//GEN-LAST:event_BtnLocalActionPerformed

    private void SelectItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectItemsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SelectItemsActionPerformed

    private void LstLocationMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LstLocationMousePressed
        SelectedLocation();
    }//GEN-LAST:event_LstLocationMousePressed

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        Back();
    }//GEN-LAST:event_BtnBackActionPerformed

    private void BtnCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCopyActionPerformed
        CopyBuild();
    }//GEN-LAST:event_BtnCopyActionPerformed

    private void BtnPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPasteActionPerformed
        PasteBuild();
    }//GEN-LAST:event_BtnPasteActionPerformed

    private void LstNetworkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LstNetworkMouseClicked
        SelectedNetworkComputer();
    }//GEN-LAST:event_LstNetworkMouseClicked
    
    private void SelectedNetworkComputer(){
       // int selected = LstNetwork.getSelectedIndex();
       // Engine.SendMsgComputer(selected, "drives");
       // SelectedComputer = selected;
    }
    
    private void Back(){
        String path = Help.GetBackPath(CurrentLocation);
        if(path != null){
            SetupLocation(SelectedComputer,path + "\\");
        }
    }
    
    private void SelectedLocation(){
        if(LstLocation.getModel().getSize() > 0){
            int selitem = LstLocation.getSelectedIndex();
            Object value = LstLocation.getModel().getElementAt(selitem);
            String distination = "";
            boolean isfile = false;
            if (value instanceof Drive) {
                    Drive d = (Drive)value;
                    distination = d.GetLocation();
            }else if(value instanceof Location){
                Location l = (Location)value;
                if(l.GetType().startsWith("i")){
                    isfile = true;
                }else if(l.GetType().startsWith("o")){
                    distination = CurrentLocation + l.GetName()+ "\\";
                    //System.out.println(l.GetLocation());
                }else if(l.GetType().startsWith("b")){
                    Back();
                    isfile = true;
                }
            }

            if(!SelectItems.isSelected() && !isfile){
                SetupLocation(SelectedComputer,distination);
            }
        }
    }
    
    private void SetupLocation(int pc, String loc){
       /* SelectedComputer = pc;
        CurrentLocation = loc;
        if(pc == -1){
            SelectedComputerObj = Engine.GetLocalComputer();
        }else{
            SelectedComputerObj = Engine.GetRemoteComputer(pc);
        }
        System.out.println(CurrentLocation);
        if(pc == -1 && loc == "drives"){
            UpdateLocation(Engine.GetLocalDrives());
            SetLocationDisplay(Engine.GetLocalComputer().GetNickname()+" Drives");
        }else if(pc == -1){
            UpdateLocation(Engine.GetLocalLocation(loc));
            SetLocationDisplay(Engine.GetLocalComputer().GetNickname()+" "+ CurrentLocation);
        }else if(pc >= 0 && loc == "drives"){
            System.out.println("GET MOTHERFUCKING DRIEVS");
        }else if(pc >= 0){

            Engine.SendMsgComputer(pc, "location " + loc);
            System.out.println("get location for remote");
            System.out.println(loc);
        }*/
    }
    
    public void SetupRemoteLocation(Computer pc){
        System.out.println("refreshing display" + pc.GetLocation());
        String loc = pc.GetLocation();
        if(loc == "drives"){
            UpdateLocation(pc.GetDrives());
            SetLocationDisplay(pc.GetNickname()+" Drives");
        }else{
            UpdateLocation(pc.GetDirectory());
            SetLocationDisplay(pc.GetNickname()+" "+ CurrentLocation);
        }
    }
    
    public void SetComputerNetwork(DefaultListModel NetworkLst){
        LstNetwork.setModel(NetworkLst);
    }
    
    public void UpdateLocation(ArrayList Tmp){
        LocationLst.clear();
        for(int i = 0; i<= Tmp.size()-1; i++){
            AddLocation(Tmp.get(i));
        }
    }
    
    private void AddLocation(Object o){
        if (o instanceof Drive) {
            LocationLst.addElement((Drive)o);
        }else if(o instanceof Location){
            LocationLst.addElement((Location)o);
        }
    }
    


    public void AddComputer(Computer pc){

    }
    
    private void SetLocationDisplay(String loc){
        TxtLocation.setText(loc);
    }
    
    private void CopyBuild(){
        if(!CurrentLocation.equals("drives")){
            Copylst = BuildSelectedCopyLst();
            CopyLocation = CurrentLocation;
            CopyComputer = SelectedComputer;
        }
    }
    
    private void PasteBuild(){
     /*   String frompc = "";
        String topc = "";
        if(SelectedComputer == -1){
            topc = "local";
        }
        
        if(CopyComputer == -1){
            frompc = "local";
        }
        
        Transfer t = new Transfer(frompc,topc,Copylst,CopyLocation,CurrentLocation);
        Engine.AddTransferObj(t);
       Engine.RefreshTransferDisplayLst();*/
    }
    
    private ArrayList<Location> BuildSelectedCopyLst(){
        int[] selected = LstLocation.getSelectedIndices();
        ArrayList<Location> tmp = new ArrayList<Location>();
        for(int i = 0;i<=selected.length-1;i++){
            Object item = LstLocation.getModel().getElementAt(i);
            if(item instanceof Location){
                tmp.add((Location)item);
            }
        }
        return tmp;
    }
    
    //private void ShowTransferFrame(){Engine.ShowTransferFrame();}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAdd;
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnCopy;
    private javax.swing.JButton BtnLocal;
    private javax.swing.JButton BtnPaste;
    private javax.swing.JButton BtnSearch;
    private javax.swing.JList<String> LstLocation;
    private javax.swing.JList<String> LstNetwork;
    private javax.swing.JCheckBox SelectItems;
    private javax.swing.JTextField TxtLocation;
    private javax.swing.JLabel TxtOutput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
